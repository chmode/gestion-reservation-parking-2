# Frontend stage
FROM node:17-alpine AS frontend
WORKDIR /app/frontend
COPY ./frontend/clientside/package*.json ./
RUN npm install
COPY ./frontend/clientside .
RUN npm run build

# Database stage
FROM mysql:latest AS database
ENV MYSQL_ALLOW_EMPTY_PASSWORD=yes
ENV MYSQL_DATABASE=parking_db
COPY ./init.sql /docker-entrypoint-initdb.d/init.sql

# Backend stage
FROM openjdk:17-jdk-alpine AS backend
WORKDIR /app/backend
COPY ./ParkingManagment/target/ParkingManagment-0.0.1-SNAPSHOT.jar app.jar

# Define environment variables for backend
ENV MYSQL_HOST=database
ENV MYSQL_PORT=3306
ENV MYSQL_DATABASE=parking_db
ENV MYSQL_USER=root

# Final stage
FROM alpine:latest
COPY --from=frontend /app/frontend/build /app/frontend
COPY --from=backend /app/backend/app.jar /app/backend/app.jar
COPY --from=database /docker-entrypoint-initdb.d/init.sql /docker-entrypoint-initdb.d/init.sql

# Install Java
RUN apk add --no-cache openjdk17-jdk

# Set working directory
WORKDIR /app/backend

# Expose ports
EXPOSE 3000
EXPOSE 8080
EXPOSE 3306

# Define the command to run the Java application
CMD ["java", "-jar", "app.jar"]
